{"name": "test_pay", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)", "trace": "self = <class 'testcase.test_mtx_pay.TestPay'>\n\n    def setup_class(self):\n        # 创建session\n        self.session = requests.session()\n    \n        # 调用成功的登录接口\n        ApiLogin().login_success(self.session)\n        # 调用下订单接口\n>       ApiOrder().order(self.session)\n\ntestcase\\test_mtx_pay.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi\\apiOrder.py:29: in order\n    setting.JUMP_URL = resp_order.json().get('data').get('jump_url')\nd:\\python\\untitled5\\lib\\site-packages\\requests\\models.py:900: in json\n    return complexjson.loads(self.text, **kwargs)\nD:\\python\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\nD:\\python\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x000001EE64441240>\ns = \"[Fiddler] The connection to '10.74.131.110' failed. <br />Error: ConnectionAborted (0x2745). <br />System.Net.Sockets...                                                                                                                      \"\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n\nD:\\python\\lib\\json\\decoder.py:357: JSONDecodeError"}, "description": "\n        测试用例\n        :return:\n        ", "attachments": [{"name": "log", "source": "0bd8af7b-d5ba-43e3-a8b2-a9460f8f7a47-attachment.txt", "type": "text/plain"}], "start": 1606733858754, "stop": 1606733858754, "uuid": "7e9575ed-19b9-4c2a-9782-5c6da0bf8a5e", "historyId": "d1dbfa2e92e506a22c32555ac9a1ff1e", "testCaseId": "9dc2431b0e8c9d5041152523433a256e", "fullName": "testcase.test_mtx_pay.TestPay#test_pay", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_mtx_pay"}, {"name": "subSuite", "value": "TestPay"}, {"name": "host", "value": "liusx17111"}, {"name": "thread", "value": "35148-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_mtx_pay"}]}